// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesCore.Application.Data;

#nullable disable

namespace SalesCore.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221206114831_addguidvalueincontracttable")]
    partial class addguidvalueincontracttable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarSales.Core.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarSales.Core.Models.InsuranceContract", b =>
                {
                    b.Property<Guid>("InsuranceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("dc22a97d-75c9-4417-ab34-3d225330cd10"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsuranceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 12, 6, 13, 48, 31, 140, DateTimeKind.Local).AddTicks(4611));

                    b.Property<string>("InsuranceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("InsuranceNumber");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("insuranceContracts");
                });

            modelBuilder.Entity("CarSales.Core.Models.Plate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("FrontPlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RearPlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.HasIndex("FrontPlate")
                        .IsUnique();

                    b.HasIndex("RearPlate")
                        .IsUnique();

                    b.ToTable("plates");
                });

            modelBuilder.Entity("CarSales.Core.Models.InsuranceContract", b =>
                {
                    b.HasOne("CarSales.Core.Models.Car", "car")
                        .WithOne("InsuranceContract")
                        .HasForeignKey("CarSales.Core.Models.InsuranceContract", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("car");
                });

            modelBuilder.Entity("CarSales.Core.Models.Plate", b =>
                {
                    b.HasOne("CarSales.Core.Models.Car", "Car")
                        .WithOne("Plate")
                        .HasForeignKey("CarSales.Core.Models.Plate", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarSales.Core.Models.Car", b =>
                {
                    b.Navigation("InsuranceContract")
                        .IsRequired();

                    b.Navigation("Plate")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
